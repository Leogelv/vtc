import React from 'react';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { 
  Slide, 
  Container, 
  SectionHeader, 
  SectionLine, 
  GlassCard,
  BenefitsBox,
  BenefitItem,
  BenefitTitle,
  BenefitIcon
} from '../styles/StyledComponents';

const WowFeaturesSection = () => {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ IntersectionObserver –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1,
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—É-—Ñ–∏—á
  const wowFeatures = [
    {
      icon: 'üé≠',
      title: '–†–µ–∂–∏–º "–Ω–µ–≤–∏–¥–∏–º–∫–∏"',
      description: '–¢–∞–π–Ω—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤)'
    },
    {
      icon: 'üß†',
      title: '–ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
      description: '–í–Ω—É—Ç—Ä–∏ –º–∞–≥–∞–∑–∏–Ω–∞ (–ø–æ –æ–ø–∏—Å–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞)'
    },
    {
      icon: 'üõç',
      title: '–ö–æ–º–Ω–∞—Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤',
      description: '–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –¢–¶'
    },
    {
      icon: 'üñº',
      title: '–ñ–∏–≤–∞—è —Å—Ç–µ–Ω–∞ –∂–µ–ª–∞–Ω–∏–π',
      description: '–ú–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ –∏—â–µ—à—å'
    },
    {
      icon: 'üé§',
      title: '–ò–ò-–æ–ø—Ä–æ—Å—ã –æ—Ç NPC',
      description: '–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –∏ –∂–µ–ª–∞–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    },
    {
      icon: 'üß¨',
      title: '–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∞–≤–∞—Ç–∞—Ä–∞',
      description: '–ü–æ–∑–∂–µ ‚Äî –ø—Ä–∏–º–µ—Ä–∫–∞ –æ–¥–µ–∂–¥—ã'
    }
  ];

  return (
    <Slide id="wow-features">
      <Container>
        <SectionHeader>
          <motion.h2
            initial={{ opacity: 0, x: -20 }}
            animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: -20 }}
            transition={{ duration: 0.6 }}
          >
            üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—É-—Ñ–∏—á–∏
          </motion.h2>
          <SectionLine />
        </SectionHeader>
        
        <motion.div
          ref={ref}
          initial={{ opacity: 0 }}
          animate={inView ? { opacity: 1 } : { opacity: 0 }}
          transition={{ duration: 0.5 }}
        >
          <GlassCard>
            <BenefitsBox>
              {wowFeatures.map((feature, index) => (
                <BenefitItem 
                  key={index}
                  as={motion.div}
                  initial={{ opacity: 0, y: 20 }}
                  animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                  transition={{ 
                    duration: 0.5, 
                    delay: index * 0.1,
                    ease: "easeOut"
                  }}
                  whileHover={{ 
                    y: -10, 
                    boxShadow: '0 15px 30px rgba(0, 0, 0, 0.3)',
                    transition: { duration: 0.3 }
                  }}
                >
                  <BenefitTitle>
                    <BenefitIcon>{feature.icon}</BenefitIcon> {feature.title}
                  </BenefitTitle>
                  <p>{feature.description}</p>
                </BenefitItem>
              ))}
            </BenefitsBox>
          </GlassCard>
        </motion.div>
      </Container>
    </Slide>
  );
};

export default WowFeaturesSection; 